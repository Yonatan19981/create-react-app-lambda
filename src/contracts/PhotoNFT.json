{
  "contractName": "PhotoNFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nftName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_nftSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "photoPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentPhotoId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nftName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_nftSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"photoPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentPhotoId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,string)\":{\"details\":\"mint a photoNFTtokenURI - URL include ipfs hash\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{},\"notice\":\"- This is the NFT contract for a photo\"}},\"settings\":{\"compilationTarget\":{\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/PhotoNFT.sol\":\"PhotoNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/PhotoNFT.sol\":{\"keccak256\":\"0x6b84e0814a077dae711e86534fea9f9ef759f04ad531a283d1f6dabc9849399c\",\"urls\":[\"bzz-raw://54d95a2edb025ad75b39e1e21e67820bfbdeca0b9f7ea0a686f7ac324ba38466\",\"dweb:/ipfs/QmYSPkr3fpJdrZQRr1cn7rB3funBuWESQPzyeCEoh6vSNA\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x9da23588f58d0fa67097984e151bdaa6aa69c5e192bae17b44a90b0cfc194736\",\"urls\":[\"bzz-raw://5e88c7dbb4d1e6d3f133112b9994491b8531f5d9103cf41becd1c267d2cd67af\",\"dweb:/ipfs/QmNuSmDBgv616hXRshbHx48ufdZoSrcFHpwqP4iPg2ac4X\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xbbb6159006ae3639daea09f7d63987816d6cf3a99f52af919363e025d3abf3b8\",\"urls\":[\"bzz-raw://35e7d742ee71461779df12a0ab1ad4701144d98eb6401182838c8daf40b008dd\",\"dweb:/ipfs/QmY4t7pxcX2cfk6VsGJWZLBgoKMpRctY8X1HPxykLjptSi\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0ca8ea2df3f83ab9bfb4c7a1066c14822f25c9a8b3ec339be490eaf46d87430d\",\"urls\":[\"bzz-raw://a76aafb099fca11951ba63c9ba5ed2e49942575af7372ee7558a50bd1ac9ee61\",\"dweb:/ipfs/QmUQKX3TDxNF4FBtj9Agm5x7EAFrpkdgEobDkk958CZoBH\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x6c1899ddf6ca192150b58ce0ad2a890d981282a3ec2620700fa1c9a381b79ba0\",\"urls\":[\"bzz-raw://d898fb28a61ef52f03fcc3be772b09aeb4c88ebe6e57b79d7275da94758d6afa\",\"dweb:/ipfs/QmRFuDxB532sYwB8JXq5LdHLAfGigcAHMvh4T4TBVrHPwK\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x21b8368e133ed2ee80f5feb602ff6bad7e3b9110b1ae90ea0faabf9c00527224\",\"urls\":[\"bzz-raw://ac1f35c6b92a163e16498daa3d471bfd218fad71f8067ae357950ddd31add718\",\"dweb:/ipfs/QmPk2WQbNXPW1jnnpDZXVxhgXATBU6fGwYFejWi21oL94M\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xb8deb41bb234969070dc362c144191f2781178c33cf6b434fd68aa3692834105\",\"urls\":[\"bzz-raw://83ef717ae1d047085d6ce2d63ed987c3282ba22190c09fa75f52346af2ac67bb\",\"dweb:/ipfs/QmQqQJor8zVE9kvYiCZscmerKrdLGgiELrn199zQEm7kZp\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1f059ee943273719130df645fa38069b792988e8b732585528d5b1265f5aa046\",\"urls\":[\"bzz-raw://31e4d99091a83a42a6ea14d74ceae2ec3ffb2905c7ee07358875af72ea188333\",\"dweb:/ipfs/Qmf7nHc6BwhbyawapCVRZHzhBHNoA8ftpQWmGSyToVKVzN\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x1cded69b7f4e17fe634fecbf2bf43320beb11a95ba924c3665a11fc8f47dffc4\",\"urls\":[\"bzz-raw://013a7b38cce9bf8d10af9ec8b5e09be1ea6645da2e1958bf6ed8a875942ac6d6\",\"dweb:/ipfs/Qme9TC1YrXMpNHFoM8GHRjWtRWJ1LxRcYJCPSfoqY4yYri\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa0bb72e035727b0631aac6380e899ad48511073a3d67f1da528f845d4a3121fb\",\"urls\":[\"bzz-raw://aa3f398156da37e868c7d22967457a70aa840097c7d532b0155208a0d2dbf63f\",\"dweb:/ipfs/QmUfBdHdyzY5FzhZPC46RDsqJfaqT9oLhsknP92pYqtM2g\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x5e7281dbd14cf07af0974ce830c6242062cd430b70658878d49b5f5c1e2ec0aa\",\"urls\":[\"bzz-raw://3c9374b456bf5fde2c473331ff75bed9c6be3634948ba6a6507e4c19c2abf605\",\"dweb:/ipfs/QmUm5NKd1ToSr8MHVVanQv3XEkQpmYKw2441KXYyXPE6np\"]},\"/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzz-raw://a3c2d9f046beebab7fb41b1b124a6a124a36f510f7c67365861402ac831bdc71\",\"dweb:/ipfs/QmUtASRgitregbKH83anopLtF9vFQe3BKeAjhUa6F7t9YV\"]},\"hardhat/console.sol\":{\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"urls\":[\"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763\",\"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600c553480156200001657600080fd5b5060405162001c3b38038062001c3b833981016040819052620000399162000573565b83838181620000586301ffc9a760e01b6001600160e01b03620000f716565b620000736380ac58cd60e01b6001600160e01b03620000f716565b6200008e63780e9d6360e01b6001600160e01b03620000f716565b8151620000a39060099060208501906200045b565b508051620000b990600a9060208401906200045b565b50620000d5635b5e139f60e01b6001600160e01b03620000f716565b50505050620000eb85836200013460201b60201c565b50505050505062000787565b6001600160e01b031980821614156200010f57600080fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b6000806200014a6001600160e01b03620001b916565b9050600c54600101600c819055506200018860405180606001604052806027815260200162001c146027913982620001de60201b620009371760201c565b6200019d84826001600160e01b036200022f16565b620001b281846001600160e01b036200026f16565b5092915050565b6000620001d86001600c54620002b360201b62000c271790919060201c565b90505b90565b6200022b8282604051602401620001f79291906200068c565b60408051601f198184030181529190526020810180516001600160e01b039081166309710a9d60e41b17909152620002cf16565b5050565b620002468282620002f060201b62000c611760201c565b6200025b82826001600160e01b03620003bc16565b6200022b816001600160e01b03620003fa16565b62000283826001600160e01b036200043e16565b6200028d57600080fd5b6000828152600b602090815260409091208251620002ae928401906200045b565b505050565b600082820183811015620002c657600080fd5b90505b92915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b0382166200030457600080fd5b62000318816001600160e01b036200043e16565b156200032357600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b038816908117909155845260038252909220546200037192909190620002b3811b62000c2717901c565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000908152600160205260409020546001600160a01b0316151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049e57805160ff1916838001178555620004ce565b82800160010185558215620004ce579182015b82811115620004ce578251825591602001919060010190620004b1565b50620004dc929150620004e0565b5090565b620001db91905b80821115620004dc5760008155600101620004e7565b8051620002c98162000762565b600082601f8301126200051c57600080fd5b8151620005336200052d82620006de565b620006b7565b915080825260208301602083018583830111156200055057600080fd5b6200055d83828462000725565b50505092915050565b8051620002c9816200077c565b600080600080600060a086880312156200058c57600080fd5b60006200059a8888620004fd565b95505060208601516001600160401b03811115620005b757600080fd5b620005c5888289016200050a565b94505060408601516001600160401b03811115620005e257600080fd5b620005f0888289016200050a565b93505060608601516001600160401b038111156200060d57600080fd5b6200061b888289016200050a565b92505060806200062e8882890162000566565b9150509295509295909350565b6000620006488262000706565b6200065481856200070a565b93506200066681856020860162000725565b620006718162000758565b9093019392505050565b6200068681620001db565b82525050565b604080825281016200069f81856200063b565b9050620006b060208301846200067b565b9392505050565b6040518181016001600160401b0381118282101715620006d657600080fd5b604052919050565b60006001600160401b03821115620006f557600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b60006001600160a01b038216620002c9565b60005b838110156200074257818101518382015260200162000728565b8381111562000752576000848401525b50505050565b601f01601f191690565b6200076d8162000713565b81146200077957600080fd5b50565b6200076d81620001db565b61147d80620007976000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063b4a5b64611610071578063b4a5b64614610230578063b88d4fde14610238578063c87b56dd1461024b578063d0def5211461025e578063e985e9c51461027157610116565b80636352211e146101ef57806370a082311461020257806395d89b4114610215578063a22cb4651461021d57610116565b806318160ddd116100e957806318160ddd1461018e57806323b872dd146101a35780632f745c59146101b657806342842e0e146101c95780634f6ccce7146101dc57610116565b806301ffc9a71461011b57806306fdde0314610144578063081812fc14610159578063095ea7b314610179575b600080fd5b61012e6101293660046110b2565b610284565b60405161013b919061127f565b60405180910390f35b61014c6102a3565b60405161013b919061128d565b61016c6101673660046110ee565b61033a565b60405161013b919061122d565b61018c610187366004611082565b61036a565b005b610196610433565b60405161013b91906112fe565b61018c6101b1366004610f44565b610439565b6101966101c4366004611082565b61046f565b61018c6101d7366004610f44565b6104bd565b6101966101ea3660046110ee565b6104d8565b61016c6101fd3660046110ee565b61050c565b610196610210366004610eec565b61052e565b61014c61055f565b61018c61022b36600461100a565b6105c0565b610196610645565b61018c610246366004610f91565b61064b565b61014c6102593660046110ee565b610684565b61012e61026c36600461103a565b610737565b61012e61027f366004610f0a565b61078d565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b505050505090505b90565b6000610345826107bb565b61034e57600080fd5b506000908152600260205260409020546001600160a01b031690565b60006103758261050c565b9050806001600160a01b0316836001600160a01b0316141561039657600080fd5b336001600160a01b03821614806103b257506103b2813361078d565b6103d75760405162461bcd60e51b81526004016103ce906112be565b60405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b61044333826107d8565b61045f5760405162461bcd60e51b81526004016103ce906112ee565b61046a838383610837565b505050565b600061047a8361052e565b821061048557600080fd5b6001600160a01b03831660009081526005602052604090208054839081106104a957fe5b906000526020600020015490505b92915050565b61046a8383836040518060200160405280600081525061064b565b60006104e2610433565b82106104ed57600080fd5b600782815481106104fa57fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806104b757600080fd5b60006001600160a01b03821661054357600080fd5b506001600160a01b031660009081526003602052604090205490565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032f5780601f106103045761010080835404028352916020019161032f565b6001600160a01b0382163314156105d657600080fd5b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061063990859061127f565b60405180910390a35050565b600c5481565b610656848484610439565b61066284848484610856565b61067e5760405162461bcd60e51b81526004016103ce906112de565b50505050565b606061068f826107bb565b61069857600080fd5b6000828152600b602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b50505050509050919050565b60008061074261091b565b9050600c54600101600c819055506107726040518060600160405280602781526020016114146027913982610937565b61077c8482610980565b610786818461099d565b5092915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000806107e48361050c565b9050806001600160a01b0316846001600160a01b0316148061081f5750836001600160a01b03166108148461033a565b6001600160a01b0316145b8061082f575061082f818561078d565b949350505050565b6108428383836109ce565b61084c8382610aee565b61046a8282610be3565b600061086a846001600160a01b0316610c21565b6108765750600161082f565b604051630a85bd0160e11b81526000906001600160a01b0386169063150b7a02906108ab9033908a908990899060040161123b565b602060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108fd91908101906110d0565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600c5460009061093290600163ffffffff610c2716565b905090565b61097c828260405160240161094d92919061129e565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610c40565b5050565b61098a8282610c61565b6109948282610be3565b61097c81610d13565b6109a6826107bb565b6109af57600080fd5b6000828152600b60209081526040909120825161046a92840190610da9565b826001600160a01b03166109e18261050c565b6001600160a01b031614610a075760405162461bcd60e51b81526004016103ce906112ce565b6001600160a01b038216610a1a57600080fd5b610a2381610d57565b6001600160a01b038316600090815260036020526040902054610a4d90600163ffffffff610d9416565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610a8390600163ffffffff610c2716565b6001600160a01b038084166000818152600360209081526040808320959095558582526001905283812080546001600160a01b031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610b1890600163ffffffff610d9416565b600083815260066020526040902054909150808214610bb3576001600160a01b0384166000908152600560205260408120805484908110610b5557fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610b9357fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490610bdc906000198301610e27565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b3b151590565b600082820183811015610c3957600080fd5b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038216610c7457600080fd5b610c7d816107bb565b15610c8757600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915290912054610cc891610c27565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000818152600260205260409020546001600160a01b031615610d9157600081815260026020526040902080546001600160a01b03191690555b50565b600082821115610da357600080fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dea57805160ff1916838001178555610e17565b82800160010185558215610e17579182015b82811115610e17578251825591602001919060010190610dfc565b50610e23929150610e47565b5090565b81548183558181111561046a5760008381526020902061046a9181019083015b61033791905b80821115610e235760008155600101610e4d565b80356104b7816113e4565b80356104b7816113f8565b80356104b781611401565b80516104b781611401565b600082601f830112610e9e57600080fd5b8135610eb1610eac82611333565b61130c565b91508082526020830160208301858383011115610ecd57600080fd5b610ed88382846113a2565b50505092915050565b80356104b78161140a565b600060208284031215610efe57600080fd5b600061082f8484610e61565b60008060408385031215610f1d57600080fd5b6000610f298585610e61565b9250506020610f3a85828601610e61565b9150509250929050565b600080600060608486031215610f5957600080fd5b6000610f658686610e61565b9350506020610f7686828701610e61565b9250506040610f8786828701610ee1565b9150509250925092565b60008060008060808587031215610fa757600080fd5b6000610fb38787610e61565b9450506020610fc487828801610e61565b9350506040610fd587828801610ee1565b925050606085013567ffffffffffffffff811115610ff257600080fd5b610ffe87828801610e8d565b91505092959194509250565b6000806040838503121561101d57600080fd5b60006110298585610e61565b9250506020610f3a85828601610e6c565b6000806040838503121561104d57600080fd5b60006110598585610e61565b925050602083013567ffffffffffffffff81111561107657600080fd5b610f3a85828601610e8d565b6000806040838503121561109557600080fd5b60006110a18585610e61565b9250506020610f3a85828601610ee1565b6000602082840312156110c457600080fd5b600061082f8484610e77565b6000602082840312156110e257600080fd5b600061082f8484610e82565b60006020828403121561110057600080fd5b600061082f8484610ee1565b61111581611391565b82525050565b61111581611368565b61111581611373565b60006111388261135b565b611142818561135f565b93506111528185602086016113ae565b61115b816113da565b9093019392505050565b6000611172600e8361135f565b6d185c1c1c9bdd994819985a5b195960921b815260200192915050565b600061119c601e8361135f565b7f5f7472616e7366657246726f6d206661696c656420696e204552433732310000815260200192915050565b60006111d560158361135f565b741c1c9bd89b195b481dda5d1a081c9958da595d9959605a1b815260200192915050565b6000611206600f8361135f565b6e185c1c1c9bdd985b0819985a5b1959608a1b815260200192915050565b61111581610337565b602081016104b7828461111b565b60808101611249828761110c565b611256602083018661111b565b6112636040830185611224565b8181036060830152611275818461112d565b9695505050505050565b602081016104b78284611124565b60208082528101610c39818461112d565b604080825281016112af818561112d565b9050610c396020830184611224565b602080825281016104b781611165565b602080825281016104b78161118f565b602080825281016104b7816111c8565b602080825281016104b7816111f9565b602081016104b78284611224565b60405181810167ffffffffffffffff8111828210171561132b57600080fd5b604052919050565b600067ffffffffffffffff82111561134a57600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b60006104b782611385565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60006104b78260006104b782611368565b82818337506000910152565b60005b838110156113c95781810151838201526020016113b1565b8381111561067e5750506000910152565b601f01601f191690565b6113ed81611368565b8114610d9157600080fd5b6113ed81611373565b6113ed81611378565b6113ed8161033756fe546865206e66742773206964207768696368206973206265696e67206372656174656420697320a365627a7a723158203bdd457f53201628c14978d67bfd21856bd310f3cdbbf8428b0a8581eee18daa6c6578706572696d656e74616cf564736f6c63430005100040546865206e66742773206964207768696368206973206265696e67206372656174656420697320",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063b4a5b64611610071578063b4a5b64614610230578063b88d4fde14610238578063c87b56dd1461024b578063d0def5211461025e578063e985e9c51461027157610116565b80636352211e146101ef57806370a082311461020257806395d89b4114610215578063a22cb4651461021d57610116565b806318160ddd116100e957806318160ddd1461018e57806323b872dd146101a35780632f745c59146101b657806342842e0e146101c95780634f6ccce7146101dc57610116565b806301ffc9a71461011b57806306fdde0314610144578063081812fc14610159578063095ea7b314610179575b600080fd5b61012e6101293660046110b2565b610284565b60405161013b919061127f565b60405180910390f35b61014c6102a3565b60405161013b919061128d565b61016c6101673660046110ee565b61033a565b60405161013b919061122d565b61018c610187366004611082565b61036a565b005b610196610433565b60405161013b91906112fe565b61018c6101b1366004610f44565b610439565b6101966101c4366004611082565b61046f565b61018c6101d7366004610f44565b6104bd565b6101966101ea3660046110ee565b6104d8565b61016c6101fd3660046110ee565b61050c565b610196610210366004610eec565b61052e565b61014c61055f565b61018c61022b36600461100a565b6105c0565b610196610645565b61018c610246366004610f91565b61064b565b61014c6102593660046110ee565b610684565b61012e61026c36600461103a565b610737565b61012e61027f366004610f0a565b61078d565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b505050505090505b90565b6000610345826107bb565b61034e57600080fd5b506000908152600260205260409020546001600160a01b031690565b60006103758261050c565b9050806001600160a01b0316836001600160a01b0316141561039657600080fd5b336001600160a01b03821614806103b257506103b2813361078d565b6103d75760405162461bcd60e51b81526004016103ce906112be565b60405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b61044333826107d8565b61045f5760405162461bcd60e51b81526004016103ce906112ee565b61046a838383610837565b505050565b600061047a8361052e565b821061048557600080fd5b6001600160a01b03831660009081526005602052604090208054839081106104a957fe5b906000526020600020015490505b92915050565b61046a8383836040518060200160405280600081525061064b565b60006104e2610433565b82106104ed57600080fd5b600782815481106104fa57fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806104b757600080fd5b60006001600160a01b03821661054357600080fd5b506001600160a01b031660009081526003602052604090205490565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032f5780601f106103045761010080835404028352916020019161032f565b6001600160a01b0382163314156105d657600080fd5b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061063990859061127f565b60405180910390a35050565b600c5481565b610656848484610439565b61066284848484610856565b61067e5760405162461bcd60e51b81526004016103ce906112de565b50505050565b606061068f826107bb565b61069857600080fd5b6000828152600b602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b50505050509050919050565b60008061074261091b565b9050600c54600101600c819055506107726040518060600160405280602781526020016114146027913982610937565b61077c8482610980565b610786818461099d565b5092915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000806107e48361050c565b9050806001600160a01b0316846001600160a01b0316148061081f5750836001600160a01b03166108148461033a565b6001600160a01b0316145b8061082f575061082f818561078d565b949350505050565b6108428383836109ce565b61084c8382610aee565b61046a8282610be3565b600061086a846001600160a01b0316610c21565b6108765750600161082f565b604051630a85bd0160e11b81526000906001600160a01b0386169063150b7a02906108ab9033908a908990899060040161123b565b602060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108fd91908101906110d0565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600c5460009061093290600163ffffffff610c2716565b905090565b61097c828260405160240161094d92919061129e565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610c40565b5050565b61098a8282610c61565b6109948282610be3565b61097c81610d13565b6109a6826107bb565b6109af57600080fd5b6000828152600b60209081526040909120825161046a92840190610da9565b826001600160a01b03166109e18261050c565b6001600160a01b031614610a075760405162461bcd60e51b81526004016103ce906112ce565b6001600160a01b038216610a1a57600080fd5b610a2381610d57565b6001600160a01b038316600090815260036020526040902054610a4d90600163ffffffff610d9416565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610a8390600163ffffffff610c2716565b6001600160a01b038084166000818152600360209081526040808320959095558582526001905283812080546001600160a01b031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610b1890600163ffffffff610d9416565b600083815260066020526040902054909150808214610bb3576001600160a01b0384166000908152600560205260408120805484908110610b5557fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610b9357fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490610bdc906000198301610e27565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b3b151590565b600082820183811015610c3957600080fd5b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038216610c7457600080fd5b610c7d816107bb565b15610c8757600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915290912054610cc891610c27565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000818152600260205260409020546001600160a01b031615610d9157600081815260026020526040902080546001600160a01b03191690555b50565b600082821115610da357600080fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dea57805160ff1916838001178555610e17565b82800160010185558215610e17579182015b82811115610e17578251825591602001919060010190610dfc565b50610e23929150610e47565b5090565b81548183558181111561046a5760008381526020902061046a9181019083015b61033791905b80821115610e235760008155600101610e4d565b80356104b7816113e4565b80356104b7816113f8565b80356104b781611401565b80516104b781611401565b600082601f830112610e9e57600080fd5b8135610eb1610eac82611333565b61130c565b91508082526020830160208301858383011115610ecd57600080fd5b610ed88382846113a2565b50505092915050565b80356104b78161140a565b600060208284031215610efe57600080fd5b600061082f8484610e61565b60008060408385031215610f1d57600080fd5b6000610f298585610e61565b9250506020610f3a85828601610e61565b9150509250929050565b600080600060608486031215610f5957600080fd5b6000610f658686610e61565b9350506020610f7686828701610e61565b9250506040610f8786828701610ee1565b9150509250925092565b60008060008060808587031215610fa757600080fd5b6000610fb38787610e61565b9450506020610fc487828801610e61565b9350506040610fd587828801610ee1565b925050606085013567ffffffffffffffff811115610ff257600080fd5b610ffe87828801610e8d565b91505092959194509250565b6000806040838503121561101d57600080fd5b60006110298585610e61565b9250506020610f3a85828601610e6c565b6000806040838503121561104d57600080fd5b60006110598585610e61565b925050602083013567ffffffffffffffff81111561107657600080fd5b610f3a85828601610e8d565b6000806040838503121561109557600080fd5b60006110a18585610e61565b9250506020610f3a85828601610ee1565b6000602082840312156110c457600080fd5b600061082f8484610e77565b6000602082840312156110e257600080fd5b600061082f8484610e82565b60006020828403121561110057600080fd5b600061082f8484610ee1565b61111581611391565b82525050565b61111581611368565b61111581611373565b60006111388261135b565b611142818561135f565b93506111528185602086016113ae565b61115b816113da565b9093019392505050565b6000611172600e8361135f565b6d185c1c1c9bdd994819985a5b195960921b815260200192915050565b600061119c601e8361135f565b7f5f7472616e7366657246726f6d206661696c656420696e204552433732310000815260200192915050565b60006111d560158361135f565b741c1c9bd89b195b481dda5d1a081c9958da595d9959605a1b815260200192915050565b6000611206600f8361135f565b6e185c1c1c9bdd985b0819985a5b1959608a1b815260200192915050565b61111581610337565b602081016104b7828461111b565b60808101611249828761110c565b611256602083018661111b565b6112636040830185611224565b8181036060830152611275818461112d565b9695505050505050565b602081016104b78284611124565b60208082528101610c39818461112d565b604080825281016112af818561112d565b9050610c396020830184611224565b602080825281016104b781611165565b602080825281016104b78161118f565b602080825281016104b7816111c8565b602080825281016104b7816111f9565b602081016104b78284611224565b60405181810167ffffffffffffffff8111828210171561132b57600080fd5b604052919050565b600067ffffffffffffffff82111561134a57600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b60006104b782611385565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60006104b78260006104b782611368565b82818337506000910152565b60005b838110156113c95781810151838201526020016113b1565b8381111561067e5750506000910152565b601f01601f191690565b6113ed81611368565b8114610d9157600080fd5b6113ed81611373565b6113ed81611378565b6113ed8161033756fe546865206e66742773206964207768696368206973206265696e67206372656174656420697320a365627a7a723158203bdd457f53201628c14978d67bfd21856bd310f3cdbbf8428b0a8581eee18daa6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "321:1263:1:-;;;422:1;392:31;;434:348;8:9:-1;5:2;;;30:1;27;20:12;5:2;434:348:1;;;;;;;;;;;;;;;;;;;;;716:8;726:10;716:8;726:10;640:40:15;-1:-1:-1;;;640:18:15;:40::i;:::-;1906::37;-1:-1:-1;;;1906:18:37;:40::i;:::-;1240:51:39;-1:-1:-1;;;1240:18:39;:51::i;:::-;738:12:42;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;760:16:42;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;864:49:42;-1:-1:-1;;;864:18:42;:49::i;:::-;666:254;;474:155:40;;753:22:1;758:5;765:9;753:4;;;:22;;:::i;:::-;;434:348;;;;;321:1263;;990:158:15;-1:-1:-1;;;;;;1065:25:15;;;;;1057:34;;;;;;-1:-1:-1;;;;;;1101:33:15;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1101:40:15;-1:-1:-1;1101:40:15;;;990:158::o;878:349:1:-;944:4;;1013:16;:14;:16::i;:::-;992:37;;1054:14;;1069:1;1054:16;1039:14;:31;;;;1080:65;;;;;;;;;;;;;;;;;;1134:10;1080:11;;;;;:65;;:::i;:::-;1155:21;1161:2;1165:10;1155:5;:21::i;:::-;1186:34;1199:10;1211:8;1186:12;:34::i;:::-;878:349;;;;;:::o;1467:109::-;1510:19;1548:21;1567:1;1548:14;;:18;;;;;;:21;;;;:::i;:::-;1541:28;;1467:109;;:::o;5888:130:61:-;5946:68;6006:2;6010;5962:51;;;;;;;;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;5962:51:61;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;;;;182:15;;;179:29;160:49;;;5946:15:61;:68;:::i;:::-;5888:130;;:::o;3452:196:39:-;3515:24;3527:2;3531:7;3515:11;;;;;:24;;:::i;:::-;3550:40;3578:2;3582:7;3550:27;:40::i;:::-;3601;3633:7;3601:31;:40::i;1889:144:42:-;1974:16;1982:7;1974;:16::i;:::-;1966:25;;;;;;2001:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;:::-;;1889:144;;:::o;1431:145:20:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;-1:-1:-1;1431:145:20;;;;;:::o;176:288:61:-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;335:126;;;;;:::o;8378:278:37:-;-1:-1:-1;;;;;8449:16:37;;8441:25;;;;;;8485:16;8493:7;8485;:16::i;:::-;8484:17;8476:26;;;;;;8513:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8513:25:37;-1:-1:-1;;;;;8513:25:37;;;;;;;;8572:21;;:17;:21;;;;;;:28;;:21;;8513:11;8572:25;;;;;:28;;:::i;:::-;-1:-1:-1;;;;;8548:21:37;;;;;;:17;:21;;;;;;:52;;;;8616:33;;8641:7;;8548:21;8616:33;;8548:21;;8616:33;8378:278;;:::o;4906:183:39:-;-1:-1:-1;;;;;5019:16:39;;;;;;;;:12;:16;;;;;;;;:23;;4990:26;;;:17;:26;;;;;:52;;;5052:16;;;-1:-1:-1;23:18;;45:23;;5052:30:39;;;;;;;;4906:183::o;5284:161::-;5387:10;:17;;5360:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5414:24:39;;;;;;;5284:161::o;7374:152:37:-;7431:4;7463:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7463:20:37;7500:19;;;7374:152::o;321:1263:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;321:1263:1;;;-1:-1:-1;321:1263:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:134;677:13;;695:33;677:13;695:33;;740:1106;;;;;;953:3;941:9;932:7;928:23;924:33;921:2;;;970:1;967;960:12;921:2;1005:1;1022:64;1078:7;1058:9;1022:64;;;1144:2;1129:18;;1123:25;1012:74;;-1:-1;1123:25;-1:-1;;1157:30;;1154:2;;;1200:1;1197;1190:12;1154:2;1220:74;1286:7;1277:6;1266:9;1262:22;1220:74;;;1352:2;1337:18;;1331:25;1210:84;;-1:-1;1331:25;-1:-1;;1365:30;;1362:2;;;1408:1;1405;1398:12;1362:2;1428:74;1494:7;1485:6;1474:9;1470:22;1428:74;;;1560:2;1545:18;;1539:25;1418:84;;-1:-1;1539:25;-1:-1;;1573:30;;1570:2;;;1616:1;1613;1606:12;1570:2;1636:74;1702:7;1693:6;1682:9;1678:22;1636:74;;;1626:84;;1518:198;1747:3;1766:64;1822:7;1813:6;1802:9;1798:22;1766:64;;;1756:74;;1726:110;915:931;;;;;;;;;1853:347;;1965:39;1998:5;1965:39;;;2016:71;2080:6;2075:3;2016:71;;;2009:78;;2092:52;2137:6;2132:3;2125:4;2118:5;2114:16;2092:52;;;2165:29;2187:6;2165:29;;;2156:39;;;;1945:255;-1:-1;;;1945:255;2207:113;2290:24;2308:5;2290:24;;;2285:3;2278:37;2272:48;;;2327:412;2493:2;2507:47;;;2478:18;;2568:78;2478:18;2632:6;2568:78;;;2560:86;;2657:72;2725:2;2714:9;2710:18;2701:6;2657:72;;;2464:275;;;;;;2746:256;2808:2;2802:9;2834:17;;;2930:22;;;-1:-1;2894:34;;2891:62;2888:2;;;2966:1;2963;2956:12;2888:2;2982;2975:22;2786:216;;-1:-1;2786:216;3009:322;;-1:-1;3142:30;;3139:2;;;3185:1;3182;3175:12;3139:2;-1:-1;;;3252:4;3229:17;;;;3225:33;3316:4;3306:15;;3076:255;3338:122;3426:12;;3397:63;3468:163;3571:19;;;3620:4;3611:14;;3564:67;3639:91;;-1:-1;;;;;3799:54;;3701:24;3782:76;3945:268;4010:1;4017:101;4031:6;4028:1;4025:13;4017:101;;;4098:11;;;4092:18;4079:11;;;4072:39;4053:2;4046:10;4017:101;;;4133:6;4130:1;4127:13;4124:2;;;4198:1;4189:6;4184:3;4180:16;4173:27;4124:2;3994:219;;;;;4221:97;4309:2;4289:14;-1:-1;;4285:28;;4269:49;4326:117;4395:24;4413:5;4395:24;;;4388:5;4385:35;4375:2;;4434:1;4431;4424:12;4375:2;4369:74;;4450:117;4519:24;4537:5;4519:24;;4493:74;321:1263:1;;;;;;",
  "deployedSourceMap": "321:1263:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;321:1263:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1024:83:42;;;:::i;:::-;;;;;;;;3722:151:37;;;;;;;;;:::i;:::-;;;;;;;;3128:309;;;;;;;;;:::i;:::-;;2005:94:39;;;:::i;:::-;;;;;;;;5277:198:37;;;;;;;;;:::i;1671:182:39:-;;;;;;;;;:::i;6114:131:37:-;;;;;;;;;:::i;2436:148:39:-;;;;;;;;;:::i;2530:177:37:-;;;;;;;;;:::i;2156:150::-;;;;;;;;;:::i;1215:87:42:-;;;:::i;4165:213:37:-;;;;;;;;;:::i;392:31:1:-;;;:::i;6950:235:37:-;;;;;;;;;:::i;1501:151:42:-;;;;;;;;;:::i;878:349:1:-;;;;;;;;;:::i;4699:145:37:-;;;;;;;;;:::i;778:133:15:-;-1:-1:-1;;;;;;871:33:15;848:4;871:33;;;;;;;;;;;;;;778:133::o;1024:83:42:-;1095:5;1088:12;;;;;;;;;;;;;-1:-1:-1;;1088:12:42;;;;;;;;;;;;;;;;;;;;;;;;;;1063:13;;1088:12;;1095:5;;1088:12;;;1095:5;1088:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:83;;:::o;3722:151:37:-;3781:7;3808:16;3816:7;3808;:16::i;:::-;3800:25;;;;;;-1:-1:-1;3842:24:37;;;;:15;:24;;;;;;-1:-1:-1;;;;;3842:24:37;;3722:151::o;3128:309::-;3191:13;3207:16;3215:7;3207;:16::i;:::-;3191:32;-1:-1:-1;;;;;;3241:11:37;;;;;;;;3233:20;;;;;;-1:-1:-1;;;;;3271:19:37;;:10;:19;;:58;;;3294:35;3311:5;3318:10;3294:16;:35::i;:::-;3263:84;;;;-1:-1:-1;;;3263:84:37;;;;;;;;;;;;;;;;;3358:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3358:29:37;-1:-1:-1;;;;;3358:29:37;;;;;;;;;3402:28;;3358:24;;3402:28;;;;;;;3128:309;;;:::o;2005:94:39:-;2075:10;:17;2005:94;:::o;5277:198:37:-;5367:39;5386:10;5398:7;5367:18;:39::i;:::-;5359:66;;;;-1:-1:-1;;;5359:66:37;;;;;;;;;5436:32;5450:4;5456:2;5460:7;5436:13;:32::i;:::-;5277:198;;;:::o;1671:182:39:-;1751:7;1786:16;1796:5;1786:9;:16::i;:::-;1778:5;:24;1770:33;;;;;;-1:-1:-1;;;;;1820:19:39;;;;;;:12;:19;;;;;:26;;1840:5;;1820:26;;;;;;;;;;;;;;1813:33;;1671:182;;;;;:::o;6114:131:37:-;6199:39;6216:4;6222:2;6226:7;6199:39;;;;;;;;;;;;:16;:39::i;2436:148:39:-;2494:7;2529:13;:11;:13::i;:::-;2521:5;:21;2513:30;;;;;;2560:10;2571:5;2560:17;;;;;;;;;;;;;;;;2553:24;;2436:148;;;:::o;2530:177:37:-;2585:7;2620:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2620:20:37;;2650:28;;;;;2156:150;2211:7;-1:-1:-1;;;;;2238:19:37;;2230:28;;;;;;-1:-1:-1;;;;;;2275:24:37;;;;;:17;:24;;;;;;;2156:150::o;1215:87:42:-;1288:7;1281:14;;;;;;;;;;;;;-1:-1:-1;;1281:14:42;;;;;;;;;;;;;;;;;;;;;;;;;;1256:13;;1281:14;;1288:7;;1281:14;;;1288:7;1281:14;;;;;;;;;;;;;;;;;;;;;;;;4165:213:37;4250:10;-1:-1:-1;;;;;4244:16:37;;;;4236:25;;;;;;4290:10;4271:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4271:34:37;;;;;;;;;;;:45;;-1:-1:-1;;4271:45:37;;;;;;;4331:40;;4271:34;;4290:10;4331:40;;;;4271:45;;4331:40;;;;;;;;;;4165:213;;:::o;392:31:1:-;;;;:::o;6950:235:37:-;7056:31;7069:4;7075:2;7079:7;7056:12;:31::i;:::-;7105:48;7128:4;7134:2;7138:7;7147:5;7105:22;:48::i;:::-;7097:81;;;;-1:-1:-1;;;7097:81:37;;;;;;;;;6950:235;;;;:::o;1501:151:42:-;1559:13;1592:16;1600:7;1592;:16::i;:::-;1584:25;;;;;;1626:19;;;;:10;:19;;;;;;;;;1619:26;;;;;;;;;;;-1:-1:-1;;1619:26:42;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:19;;1619:26;;1626:19;1619:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:151;;;:::o;878:349:1:-;944:4;992:18;1013:16;:14;:16::i;:::-;992:37;;1054:14;;1069:1;1054:16;1039:14;:31;;;;1080:65;;;;;;;;;;;;;;;;;;1134:10;1080:11;:65::i;:::-;1155:21;1161:2;1165:10;1155:5;:21::i;:::-;1186:34;1199:10;1211:8;1186:12;:34::i;:::-;878:349;;;;;:::o;4699:145:37:-;-1:-1:-1;;;;;4802:25:37;;;4779:4;4802:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4699:145::o;7374:152::-;7431:4;7463:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7463:20:37;7500:19;;;7374:152::o;7889:246::-;7974:4;7990:13;8006:16;8014:7;8006;:16::i;:::-;7990:32;-1:-1:-1;;;;;;8040:16:37;;;;;;;;:51;;-1:-1:-1;;;;;;8060:31:37;;:20;8072:7;8060:11;:20::i;:::-;-1:-1:-1;;;;;8060:31:37;;8040:51;:87;;;;8095:32;8112:5;8119:7;8095:16;:32::i;:::-;8032:96;7889:246;-1:-1:-1;;;;7889:246:37:o;2958:239:39:-;3043:38;3063:4;3069:2;3073:7;3043:19;:38::i;:::-;3092:47;3125:4;3131:7;3092:32;:47::i;:::-;3150:40;3178:2;3182:7;3150:27;:40::i;10835:347:37:-;10956:4;10981:15;-1:-1:-1;;;;;10981:13:37;;;:15::i;:::-;10976:58;;-1:-1:-1;11019:4:37;11012:11;;10976:58;11060:70;;-1:-1:-1;;;11060:70:37;;11044:13;;-1:-1:-1;;;;;11060:36:37;;;;;:70;;11097:10;;11109:4;;11115:7;;11124:5;;11060:70;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11060:70:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11060:70:37;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11060:70:37;;;;;;;;;-1:-1:-1;;;;;;11148:26:37;-1:-1:-1;;;11148:26:37;;;-1:-1:-1;;;;;;10835:347:37:o;1467:109:1:-;1548:14;;1510:19;;1548:21;;1567:1;1548:21;:18;:21;:::i;:::-;1541:28;;1467:109;:::o;5888:130:61:-;5946:68;6006:2;6010;5962:51;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;5962:51:61;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;5946:15:61;:68::i;:::-;5888:130;;:::o;3452:196:39:-;3515:24;3527:2;3531:7;3515:11;:24::i;:::-;3550:40;3578:2;3582:7;3550:27;:40::i;:::-;3601;3633:7;3601:31;:40::i;1889:144:42:-;1974:16;1982:7;1974;:16::i;:::-;1966:25;;;;;;2001:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;9877:435:37:-;-1:-1:-1;;;;;9970:24:37;;:16;9978:7;9970;:16::i;:::-;-1:-1:-1;;;;;9970:24:37;;9962:66;;;;-1:-1:-1;;;9962:66:37;;;;;;;;;-1:-1:-1;;;;;10046:16:37;;10038:25;;;;;;10074:23;10089:7;10074:14;:23::i;:::-;-1:-1:-1;;;;;10134:23:37;;;;;;:17;:23;;;;;;:30;;-1:-1:-1;10134:27:37;:30::i;:::-;-1:-1:-1;;;;;10108:23:37;;;;;;;:17;:23;;;;;;:56;;;;10198:21;;;;;;;:28;;-1:-1:-1;10198:25:37;:28::i;:::-;-1:-1:-1;;;;;10174:21:37;;;;;;;:17;:21;;;;;;;;:52;;;;10237:20;;;-1:-1:-1;10237:20:37;;;;;:25;;-1:-1:-1;;;;;;10237:25:37;;;;;10278:27;;10237:20;;10174:21;;10278:27;;;;;;9877:435;;;:::o;6060:1128:39:-;-1:-1:-1;;;;;6347:18:39;;6322:22;6347:18;;;:12;:18;;;;;:25;:32;;-1:-1:-1;6347:29:39;:32::i;:::-;6389:18;6410:26;;;:17;:26;;;;;;6322:57;;-1:-1:-1;6540:28:39;;;6536:323;;-1:-1:-1;;;;;6606:18:39;;6584:19;6606:18;;;:12;:18;;;;;:34;;6625:14;;6606:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6655:18:39;;;;:12;:18;;;;;;;:30;;6606:34;;-1:-1:-1;6606:34:39;;6674:10;;6655:30;;;;;;;;;;;;;;;;;:44;;;;6771:30;;;:17;:30;;;;;:43;;;6536:323;-1:-1:-1;;;;;6945:18:39;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6945:27:39;;;:::i;:::-;;6060:1128;;;;:::o;4906:183::-;-1:-1:-1;;;;;5019:16:39;;;;;;;;:12;:16;;;;;;;;:23;;4990:26;;;:17;:26;;;;;:52;;;5052:16;;;-1:-1:-1;23:18;;45:23;;5052:30:39;;;;;;;;4906:183::o;463:616:51:-;1026:20;1064:8;;;463:616::o;1431:145:20:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:20:o;176:288:61:-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;335:126;;;;;:::o;8378:278:37:-;-1:-1:-1;;;;;8449:16:37;;8441:25;;;;;;8485:16;8493:7;8485;:16::i;:::-;8484:17;8476:26;;;;;;8513:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8513:25:37;-1:-1:-1;;;;;8513:25:37;;;;;;;;8572:21;;:17;:21;;;;;;;:28;;:25;:28::i;:::-;-1:-1:-1;;;;;8548:21:37;;;;;;:17;:21;;;;;;:52;;;;8616:33;;8641:7;;8548:21;8616:33;;8548:21;;8616:33;8378:278;;:::o;5284:161:39:-;5387:10;:17;;5360:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5414:24:39;;;;;;;5284:161::o;11343:171:37:-;11442:1;11406:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11406:24:37;:38;11402:106;;11495:1;11460:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;11460:37:37;;;11402:106;11343:171;:::o;1205:145:20:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:20;;;1205:145::o;321:1263:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;321:1263:1;;;-1:-1:-1;321:1263:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;339:20;;364:32;339:20;364:32;;408:132;485:13;;503:32;485:13;503:32;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;1447:130;1514:20;;1539:33;1514:20;1539:33;;1584:241;;1688:2;1676:9;1667:7;1663:23;1659:32;1656:2;;;1704:1;1701;1694:12;1656:2;1739:1;1756:53;1801:7;1781:9;1756:53;;1832:366;;;1953:2;1941:9;1932:7;1928:23;1924:32;1921:2;;;1969:1;1966;1959:12;1921:2;2004:1;2021:53;2066:7;2046:9;2021:53;;;2011:63;;1983:97;2111:2;2129:53;2174:7;2165:6;2154:9;2150:22;2129:53;;;2119:63;;2090:98;1915:283;;;;;;2205:491;;;;2343:2;2331:9;2322:7;2318:23;2314:32;2311:2;;;2359:1;2356;2349:12;2311:2;2394:1;2411:53;2456:7;2436:9;2411:53;;;2401:63;;2373:97;2501:2;2519:53;2564:7;2555:6;2544:9;2540:22;2519:53;;;2509:63;;2480:98;2609:2;2627:53;2672:7;2663:6;2652:9;2648:22;2627:53;;;2617:63;;2588:98;2305:391;;;;;;2703:721;;;;;2867:3;2855:9;2846:7;2842:23;2838:33;2835:2;;;2884:1;2881;2874:12;2835:2;2919:1;2936:53;2981:7;2961:9;2936:53;;;2926:63;;2898:97;3026:2;3044:53;3089:7;3080:6;3069:9;3065:22;3044:53;;;3034:63;;3005:98;3134:2;3152:53;3197:7;3188:6;3177:9;3173:22;3152:53;;;3142:63;;3113:98;3270:2;3259:9;3255:18;3242:32;3294:18;3286:6;3283:30;3280:2;;;3326:1;3323;3316:12;3280:2;3346:62;3400:7;3391:6;3380:9;3376:22;3346:62;;;3336:72;;3221:193;2829:595;;;;;;;;3431:360;;;3549:2;3537:9;3528:7;3524:23;3520:32;3517:2;;;3565:1;3562;3555:12;3517:2;3600:1;3617:53;3662:7;3642:9;3617:53;;;3607:63;;3579:97;3707:2;3725:50;3767:7;3758:6;3747:9;3743:22;3725:50;;3798:472;;;3929:2;3917:9;3908:7;3904:23;3900:32;3897:2;;;3945:1;3942;3935:12;3897:2;3980:1;3997:53;4042:7;4022:9;3997:53;;;3987:63;;3959:97;4115:2;4104:9;4100:18;4087:32;4139:18;4131:6;4128:30;4125:2;;;4171:1;4168;4161:12;4125:2;4191:63;4246:7;4237:6;4226:9;4222:22;4191:63;;4277:366;;;4398:2;4386:9;4377:7;4373:23;4369:32;4366:2;;;4414:1;4411;4404:12;4366:2;4449:1;4466:53;4511:7;4491:9;4466:53;;;4456:63;;4428:97;4556:2;4574:53;4619:7;4610:6;4599:9;4595:22;4574:53;;4650:239;;4753:2;4741:9;4732:7;4728:23;4724:32;4721:2;;;4769:1;4766;4759:12;4721:2;4804:1;4821:52;4865:7;4845:9;4821:52;;4896:261;;5010:2;4998:9;4989:7;4985:23;4981:32;4978:2;;;5026:1;5023;5016:12;4978:2;5061:1;5078:63;5133:7;5113:9;5078:63;;5164:241;;5268:2;5256:9;5247:7;5243:23;5239:32;5236:2;;;5284:1;5281;5274:12;5236:2;5319:1;5336:53;5381:7;5361:9;5336:53;;5412:142;5503:45;5542:5;5503:45;;;5498:3;5491:58;5485:69;;;5561:113;5644:24;5662:5;5644:24;;5681:104;5758:21;5773:5;5758:21;;5792:343;;5902:38;5934:5;5902:38;;;5952:70;6015:6;6010:3;5952:70;;;5945:77;;6027:52;6072:6;6067:3;6060:4;6053:5;6049:16;6027:52;;;6100:29;6122:6;6100:29;;;6091:39;;;;5882:253;-1:-1;;;5882:253;6497:314;;6657:67;6721:2;6716:3;6657:67;;;-1:-1;;;6737:37;;6802:2;6793:12;;;-1:-1;;6643:168;6820:330;;6980:67;7044:2;7039:3;6980:67;;;7080:32;7060:53;;7141:2;7132:12;;6966:184;-1:-1;;6966:184;7159:321;;7319:67;7383:2;7378:3;7319:67;;;-1:-1;;;7399:44;;7471:2;7462:12;;;-1:-1;;7305:175;7489:315;;7649:67;7713:2;7708:3;7649:67;;;-1:-1;;;7729:38;;7795:2;7786:12;;;-1:-1;;7635:169;7812:113;7895:24;7913:5;7895:24;;7932:213;8050:2;8035:18;;8064:71;8039:9;8108:6;8064:71;;8152:647;8380:3;8365:19;;8395:79;8369:9;8447:6;8395:79;;;8485:72;8553:2;8542:9;8538:18;8529:6;8485:72;;;8568;8636:2;8625:9;8621:18;8612:6;8568:72;;;8688:9;8682:4;8678:20;8673:2;8662:9;8658:18;8651:48;8713:76;8784:4;8775:6;8713:76;;;8705:84;8351:448;-1:-1;;;;;;8351:448;8806:201;8918:2;8903:18;;8932:65;8907:9;8970:6;8932:65;;9014:301;9152:2;9166:47;;;9137:18;;9227:78;9137:18;9291:6;9227:78;;9322:412;9488:2;9502:47;;;9473:18;;9563:78;9473:18;9627:6;9563:78;;;9555:86;;9652:72;9720:2;9709:9;9705:18;9696:6;9652:72;;9741:407;9932:2;9946:47;;;9917:18;;10007:131;9917:18;10007:131;;10155:407;10346:2;10360:47;;;10331:18;;10421:131;10331:18;10421:131;;10569:407;10760:2;10774:47;;;10745:18;;10835:131;10745:18;10835:131;;10983:407;11174:2;11188:47;;;11159:18;;11249:131;11159:18;11249:131;;11397:213;11515:2;11500:18;;11529:71;11504:9;11573:6;11529:71;;11617:256;11679:2;11673:9;11705:17;;;11780:18;11765:34;;11801:22;;;11762:62;11759:2;;;11837:1;11834;11827:12;11759:2;11853;11846:22;11657:216;;-1:-1;11657:216;11880:321;;12023:18;12015:6;12012:30;12009:2;;;12055:1;12052;12045:12;12009:2;-1:-1;;;12122:4;12099:17;;;;12095:33;12186:4;12176:15;;11946:255;12537:121;12624:12;;12595:63;12795:162;12897:19;;;12946:4;12937:14;;12890:67;13137:91;;13199:24;13217:5;13199:24;;13235:85;13301:13;13294:21;;13277:43;13327:144;-1:-1;;;;;;13388:78;;13371:100;13478:121;-1:-1;;;;;13540:54;;13523:76;13685:129;;13772:37;13803:5;13821:121;13900:37;13931:5;13900:37;;14065:145;14146:6;14141:3;14136;14123:30;-1:-1;14202:1;14184:16;;14177:27;14116:94;14219:268;14284:1;14291:101;14305:6;14302:1;14299:13;14291:101;;;14372:11;;;14366:18;14353:11;;;14346:39;14327:2;14320:10;14291:101;;;14407:6;14404:1;14401:13;14398:2;;;-1:-1;;14472:1;14454:16;;14447:27;14268:219;14495:97;14583:2;14563:14;-1:-1;;14559:28;;14543:49;14600:117;14669:24;14687:5;14669:24;;;14662:5;14659:35;14649:2;;14708:1;14705;14698:12;14724:111;14790:21;14805:5;14790:21;;14842:115;14910:23;14927:5;14910:23;;14964:117;15033:24;15051:5;15033:24;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport { ERC721Full } from \"./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport { SafeMath } from \"./openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"hardhat/console.sol\";\n\n\n/**\n * @notice - This is the NFT contract for a photo\n */\ncontract PhotoNFT is ERC721Full {\n    using SafeMath for uint256;\n\n    uint256 public currentPhotoId=0;\n    \n    constructor(\n        address owner,  /// Initial owner (Seller)\n        string memory _nftName, \n        string memory _nftSymbol,\n        string memory _tokenURI,    /// [Note]: TokenURI is URL include ipfs hash\n        uint256 photoPrice\n    ) \n        public \n        ERC721Full(_nftName, _nftSymbol) \n    {\n        mint(owner, _tokenURI);\n    }\n\n    /** \n     * @dev mint a photoNFT\n     * @dev tokenURI - URL include ipfs hash\n     */\n    function mint(address to, string memory tokenURI) public returns (bool) {\n        /// Mint a new PhotoNFT\n        uint256 newPhotoId = getNextPhotoId();\n        currentPhotoId=currentPhotoId+1;\n        console.log(\"The nft's id which is being created is \",newPhotoId);\n        _mint(to, newPhotoId);\n        _setTokenURI(newPhotoId, tokenURI);\n    }\n\n\n    ///--------------------------------------\n    /// Getter methods\n    ///--------------------------------------\n\n\n    ///--------------------------------------\n    /// Private methods\n    ///--------------------------------------\n    function getNextPhotoId() private returns (uint256 nextPhotoId) {\n        return currentPhotoId.add(1);\n    }\n    \n\n}\n",
  "sourcePath": "/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/PhotoNFT.sol",
  "ast": {
    "absolutePath": "/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/PhotoNFT.sol",
    "exportedSymbols": {
      "PhotoNFT": [
        145
      ]
    },
    "id": 146,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 5339,
        "src": "59:91:1",
        "symbolAliases": [
          {
            "foreign": 60,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "./openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 2580,
        "src": "151:79:1",
        "symbolAliases": [
          {
            "foreign": 62,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 14089,
        "src": "231:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 65,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5338,
              "src": "342:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$5338",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "342:10:1"
          }
        ],
        "contractDependencies": [
          2152,
          2299,
          4955,
          5314,
          5338,
          5489,
          5720,
          5747,
          5782
        ],
        "contractKind": "contract",
        "documentation": "@notice - This is the NFT contract for a photo",
        "fullyImplemented": true,
        "id": 145,
        "linearizedBaseContracts": [
          145,
          5338,
          5489,
          5782,
          5314,
          5747,
          4955,
          5720,
          2152,
          2299
        ],
        "name": "PhotoNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 69,
            "libraryName": {
              "contractScope": null,
              "id": 67,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2579,
              "src": "365:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2579",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "359:27:1",
            "typeName": {
              "id": 68,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 72,
            "name": "currentPhotoId",
            "nodeType": "VariableDeclaration",
            "scope": 145,
            "src": "392:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "392:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "422:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "743:39:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "758:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "765:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 89,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "753:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string memory) returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "753:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 95,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 85,
                    "name": "_nftName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76,
                    "src": "716:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 86,
                    "name": "_nftSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78,
                    "src": "726:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 87,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 84,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5338,
                  "src": "705:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$5338_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "705:32:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "455:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "_nftName",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "506:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "name": "_nftSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "539:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "573:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "photoPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "655:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "445:234:1"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:1"
            },
            "scope": 145,
            "src": "434:348:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "950:277:1",
              "statements": [
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "name": "newPhotoId",
                      "nodeType": "VariableDeclaration",
                      "scope": 132,
                      "src": "992:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "992:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 106,
                      "name": "getNextPhotoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1013:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "currentPhotoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1039:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "currentPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1054:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1054:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1039:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206e66742773206964207768696368206973206265696e67206372656174656420697320",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1092:41:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1e72e926cc8f40f391a061db3cf7c937ca8ed6059e30c402e99418d79451a78",
                          "typeString": "literal_string \"The nft's id which is being created is \""
                        },
                        "value": "The nft's id which is being created is "
                      },
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1134:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b1e72e926cc8f40f391a061db3cf7c937ca8ed6059e30c402e99418d79451a78",
                          "typeString": "literal_string \"The nft's id which is being created is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14088,
                        "src": "1080:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14088_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6732,
                      "src": "1080:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:65:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1161:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1165:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5121
                      ],
                      "referencedDeclaration": 5121,
                      "src": "1155:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1199:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1211:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 127,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5458,
                      "src": "1186:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:34:1"
                }
              ]
            },
            "documentation": "@dev mint a photoNFT\n@dev tokenURI - URL include ipfs hash",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "892:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "904:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "891:36:1"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "944:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "943:6:1"
            },
            "scope": 145,
            "src": "878:349:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1531:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1567:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "currentPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1548:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2558,
                      "src": "1548:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 137,
                  "id": 142,
                  "nodeType": "Return",
                  "src": "1541:28:1"
                }
              ]
            },
            "documentation": "--------------------------------------\n Getter methods\n--------------------------------------\n--------------------------------------\n Private methods\n--------------------------------------",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextPhotoId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1490:2:1"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "name": "nextPhotoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1510:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1509:21:1"
            },
            "scope": 145,
            "src": "1467:109:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 146,
        "src": "321:1263:1"
      }
    ],
    "src": "0:1585:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/PhotoNFT.sol",
    "exportedSymbols": {
      "PhotoNFT": [
        145
      ]
    },
    "id": 146,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 5339,
        "src": "59:91:1",
        "symbolAliases": [
          {
            "foreign": 60,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yonatanmartsiano/Downloads/Swallow-2/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "./openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 2580,
        "src": "151:79:1",
        "symbolAliases": [
          {
            "foreign": 62,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 146,
        "sourceUnit": 14089,
        "src": "231:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 65,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5338,
              "src": "342:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$5338",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "342:10:1"
          }
        ],
        "contractDependencies": [
          2152,
          2299,
          4955,
          5314,
          5338,
          5489,
          5720,
          5747,
          5782
        ],
        "contractKind": "contract",
        "documentation": "@notice - This is the NFT contract for a photo",
        "fullyImplemented": true,
        "id": 145,
        "linearizedBaseContracts": [
          145,
          5338,
          5489,
          5782,
          5314,
          5747,
          4955,
          5720,
          2152,
          2299
        ],
        "name": "PhotoNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 69,
            "libraryName": {
              "contractScope": null,
              "id": 67,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2579,
              "src": "365:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2579",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "359:27:1",
            "typeName": {
              "id": 68,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 72,
            "name": "currentPhotoId",
            "nodeType": "VariableDeclaration",
            "scope": 145,
            "src": "392:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "392:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "422:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "743:39:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "758:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "765:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 89,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "753:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string memory) returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "753:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 95,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 85,
                    "name": "_nftName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76,
                    "src": "716:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 86,
                    "name": "_nftSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78,
                    "src": "726:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 87,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 84,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5338,
                  "src": "705:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$5338_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "705:32:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "455:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "_nftName",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "506:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "name": "_nftSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "539:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "573:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "photoPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "655:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "445:234:1"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:1"
            },
            "scope": 145,
            "src": "434:348:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "950:277:1",
              "statements": [
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "name": "newPhotoId",
                      "nodeType": "VariableDeclaration",
                      "scope": 132,
                      "src": "992:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "992:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 106,
                      "name": "getNextPhotoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1013:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "currentPhotoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1039:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "currentPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1054:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1054:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1039:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206e66742773206964207768696368206973206265696e67206372656174656420697320",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1092:41:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1e72e926cc8f40f391a061db3cf7c937ca8ed6059e30c402e99418d79451a78",
                          "typeString": "literal_string \"The nft's id which is being created is \""
                        },
                        "value": "The nft's id which is being created is "
                      },
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1134:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b1e72e926cc8f40f391a061db3cf7c937ca8ed6059e30c402e99418d79451a78",
                          "typeString": "literal_string \"The nft's id which is being created is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14088,
                        "src": "1080:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14088_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6732,
                      "src": "1080:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:65:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1161:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1165:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5121
                      ],
                      "referencedDeclaration": 5121,
                      "src": "1155:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1199:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1211:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 127,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5458,
                      "src": "1186:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:34:1"
                }
              ]
            },
            "documentation": "@dev mint a photoNFT\n@dev tokenURI - URL include ipfs hash",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "892:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "904:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "891:36:1"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "944:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "943:6:1"
            },
            "scope": 145,
            "src": "878:349:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1531:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1567:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "currentPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1548:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2558,
                      "src": "1548:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 137,
                  "id": 142,
                  "nodeType": "Return",
                  "src": "1541:28:1"
                }
              ]
            },
            "documentation": "--------------------------------------\n Getter methods\n--------------------------------------\n--------------------------------------\n Private methods\n--------------------------------------",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextPhotoId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1490:2:1"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "name": "nextPhotoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1510:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1509:21:1"
            },
            "scope": 145,
            "src": "1467:109:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 146,
        "src": "321:1263:1"
      }
    ],
    "src": "0:1585:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-08-02T09:48:47.968Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,string)": {
        "details": "mint a photoNFTtokenURI - URL include ipfs hash"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "- This is the NFT contract for a photo"
  }
}